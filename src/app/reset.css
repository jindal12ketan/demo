/* 
    Reset CSS
    A modern CSS reset based on the work of Matan Dessaur.
    This reset is intended to be used as a starting point for all web projects.
    Based on modern CSS reset practices
*/

/* 1. Box-sizing: Apply border-box to all elements */
/* 
    The border-box value for the box-sizing property makes sure that the 
    padding and border of an element are included in its total width and height.
    This makes it easier to size elements and calculate their dimensions.
*/
*, *::before, *::after {
    box-sizing: border-box;
  }
  
  /* 2. Remove default margin and padding from common elements */
  body, h1, h2, h3, h4, p, figure, blockquote, dl, dd, ul, ol, li {
    margin: 0;
    padding: 0;
  }
  
  /* 3. Set core body defaults */
  /* 
    The min-height: 100dvh property ensures that the body element is at least as tall as the viewport.
    This is useful for ensuring that the footer of a page is always at the bottom of the viewport.

    text-rendering: optimizeSpeed is used to improve the rendering of text on the page.
  */
  body {
    min-height: 100dvh; /* Dynamic viewport height for better responsiveness */
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeSpeed;
    scroll-behavior: smooth;
    font-family: 'Proxima Nova', Arial, sans-serif;
  }
  
  /* 4. Remove list styles on ul, ol elements */
  ul, ol {
    list-style: none;
  }
  
  /* 5. Set default link styles */
  a {
    text-decoration: none;
    color: inherit;
    cursor: pointer;
  }
  
  /* 6. Make images and media elements responsive */
  img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
    height: auto;
  }
  
  /* 7. Inherit fonts and remove default styling for form elements */
  input, button, textarea, select {
    font: inherit;
    color: inherit;
    margin: 0;
    padding: 0;
    border: none;
    background: none;
    line-height: inherit;
  }
  
  /* 8. Ensure buttons and inputs have consistent appearance */
  /* 
    The -webkit-appearance and appearance properties are used to remove the default styling 
    of buttons and inputs in webkit browsers. This ensures that buttons and inputs have a 
    consistent appearance across different browsers.
  */
  button, [type="button"], [type="reset"], [type="submit"] {
    cursor: pointer;
    -webkit-appearance: none;
    appearance: none;
  }
  
  /* 9. Provide focus outlines for accessibility */
  :focus {
    outline: 2px solid #007377;
    outline-offset: 2px;
  }
  
  /* 10. Set default table styles */
  table {
    width: 100%;
    border-collapse: collapse;
  }
  
  th, td {
    padding: 0.5rem;
    text-align: left;
    border: 1px solid #ccc;
  }
  
  /* 11. Prevent text size adjustments after orientation changes */
  /* 
    The text-size-adjust property is used to prevent text size adjustments after orientation changes.
    This ensures that text remains the same size regardless of the orientation of the device.
  */
  html {
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    text-size-adjust: 100%;
  }
  
  /* 12. Set default font size */
  /* 
    The font-size property is used to set the default font size for the page.
    This ensures that text is displayed at a consistent size across different devices.
    Can be adjusted as needed, used as ratio for rem units.
  */
  html {
    font-size: 100%;
  }
  
  /* 13. Set default line height for headings */
  h1, h2, h3, h4, h5, h6 {
    line-height: 1.2;
  }

  /* 
    --font-size-h1: 3.5rem;
    --font-size-h2: 2.917rem;
    --font-size-h3: 2.431rem;
    --font-size-h4: 2.027rem;
    --font-size-h5: 1.688rem;
    --font-size-h6: 1.407rem;
  */
  h1 {
    font-size: var(--font-size-h1);
  }
  
  h2 {
    font-size: var(--font-size-h2);
  }
  
  h3 {
    font-size: var(--font-size-h3);
  }
  
  h4 {
    font-size: var(--font-size-h4);
  }
  
  h5 {
    font-size: var(--font-size-h5);
  }
  
  h6 {
    font-size: var(--font-size-h6);
  }
  
  /* 14. Set default isolation for root elements */
  /* 
    The isolation property is used to create a new stacking context for an element.
    This ensures that the element is isolated from its parent and sibling elements.
    This can be useful for preventing z-index issues and ensuring that elements are displayed correctly.
  */
  #root, #__next {
    isolation: isolate;
  }
  